// Game state variables
gameSeq=[];  // Stores the sequence of colors generated by the game
let userseq=[];  // Stores the sequence of colors clicked by the user
let highscore=[]; // for tracking high scores
let h2=document.querySelector("h2");
// Game flags
started=false; // Tracks whether the game has started
level=0;  // Tracks the current game level

// Array of button colors

let btns=["pink","green","orenge","purple"]

// Event listener to start the game when a key is pressed

document.addEventListener("keypress",function(){
      
    if(started==false)
        {
        console.log("game is started");
        started=true;
        levelup();
    }
    
});

// Function to flash a button
function btnFlash(btn){
    btn.classList.add("flash");
// Remove the flash class after a short delay
    setTimeout( function()
{
    btn.classList.remove("flash");
},800);
    

};

// Function to advance to the next level
function levelup()
{
    userseq=[]; // Reset the user sequence for the new level
    level++     // Increment the level
    highscore.push(level); // Add the current level to highscore array
    h2.innerText=`level ${level}`; // Update the level display

    // Generate a random button for the game sequence

    let ranIdx= Math.floor(Math.random() * 4); // Genrate random number between 0-3
    let randcol=btns[ranIdx];
    let randbtn=document.querySelector(`.${randcol}`)
    gameSeq.push(randcol); // Add the new color to the game sequence
    console.log(gameSeq);
    btnFlash(randbtn); // Flash the new button
    
};

// Function to play a sound ("when user clicks the wrong button")
function playSound(name) {
    var audio = new Audio( "wrong.mp3"); 
    audio.play();
}

// Function to check the user's answer
function checkans(idx){
   
    // Check if the user's last click matches the game sequence
    if(userseq[idx] === gameSeq[idx])
    {
        if(userseq.length == gameSeq.length)
        // If the sequences have the same length and are correct, level up
        setTimeout(levelup(),2000);
        
    }
    else{
        // Game over logic
         playSound("wrong");

        let body=document.querySelector("body");
        body.style.backgroundColor="red";
        setTimeout(function(){
            body.style.backgroundColor="white"}
        ,800 )

         h2.innerText=`Game Over! press any key to start 
        your score:${level}`;
        
        reset(); // Reset the game state
    }

}

// Function to handle a button press by the user
function btnpress()
{
    console.log(this);
    let btn= this;
    btnFlash(btn);  // Flash the clicked button
    let usercolor= btn.getAttribute("id"); // Add the clicked color to the user's sequence
    userseq.push(usercolor);
    console.log(userseq);
    checkans(userseq.length-1); // Check the answer
}

// Add click listeners to all game buttons
let allbtns= document.querySelectorAll(".btn");

for(btn of allbtns)
{
    btn.addEventListener("click",btnpress);
}

// Function to reset the game to its initial state
function reset(){
    
    started=false;
    level=0;
    gameSeq=[];
    userseq=[];
}
